{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/flx/Dropbox/Projects/hookleton/example/pages/fetch.js\";\nimport React from \"react\";\nimport { useState, useEffect, useCallback } from 'react';\nimport createHook from '../component';\n\nvar throttle = function throttle(func, limit) {\n  var inThrottle;\n  return function () {\n    var args = arguments;\n    var context = this;\n\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(function () {\n        return inThrottle = false;\n      }, limit);\n    }\n  };\n};\n\nvar useFetchUsers = createHook(function () {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updater = _useState4[1];\n\n  useEffect(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://randomuser.me/api/?results=10');\n\n          case 2:\n            data = _context.sent;\n            console.log('[useFetch]: Fetched 10 random users');\n            setUsers(data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  var fetchAgain = useCallback(throttle(function () {\n    return updaters(function (s) {\n      return ~s;\n    });\n  }, 1000));\n  return [user, fetchAgain];\n});\n\nvar Hookletons = function Hookletons() {\n  useFetchUsers();\n  return null;\n};\n\nvar user;\n\nvar Gender = function Gender(_ref2) {\n  var idx = _ref2.idx;\n\n  var _useFetchUsers = useFetchUsers(),\n      _useFetchUsers2 = _slicedToArray(_useFetchUsers, 1),\n      data = _useFetchUsers2[0];\n\n  return data[idx].gender;\n};\n\nvar Genders = function Genders() {\n  var _useFetchUsers3 = useFetchUsers(),\n      _useFetchUsers4 = _slicedToArray(_useFetchUsers3, 2),\n      data = _useFetchUsers4[0],\n      fetchAgain = _useFetchUsers4[1];\n\n  var user;\n  return React.createElement(\"ul\", {\n    style: {\n      listStyle: 'none',\n      borderStyle: 'solid'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, _Array$from({\n    length: 10\n  }).map(function (_, idx) {\n    return user = data[idx], React.createElement(\"il\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, idx), React.createElement(Gender, {\n      idx: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }), React.createElement(\"il\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: fetchAgain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"fetch Again\")));\n};\n\nvar Name = function Name() {};\n\nvar Location = function Location() {};\n\nvar Email = function Email() {};\n\nexport default (function () {\n  return React.createElement(React.Fragment, null, React.createElement(Hookletons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Genders, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/flx/Dropbox/Projects/hookleton/example/pages/fetch.js"],"names":["useState","useEffect","useCallback","createHook","throttle","func","limit","inThrottle","args","arguments","context","apply","setTimeout","useFetchUsers","users","setUsers","updater","fetch","data","console","log","fetchAgain","updaters","s","user","Hookletons","Gender","idx","gender","Genders","listStyle","borderStyle","length","map","_","Name","Location","Email"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport createHook from '../component';\n\nconst throttle = (func, limit) => {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n\nconst useFetchUsers = createHook(() => {\n  const [users, setUsers] = useState({});\n  const [, updater] = useState();\n\n  useEffect(async () => {\n    const data = await fetch('https://randomuser.me/api/?results=10');\n    console.log('[useFetch]: Fetched 10 random users');\n    setUsers(data);\n  });\n\n  const fetchAgain = useCallback(throttle(() => updaters(s => ~s), 1000));\n\n  return [user, fetchAgain];\n});\n\nconst Hookletons = () => {\n  useFetchUsers();\n  return null;\n}\n\n\nlet user;\n\nconst Gender = ({ idx }) => {\n  const [data] = useFetchUsers();\n  return data[idx].gender;\n};\n\nconst Genders = () => {\n  const [data, fetchAgain] = useFetchUsers();\n  let user;\n  return (\n    <ul style={{ listStyle: 'none', borderStyle: 'solid' }}>\n      {Array.from({ length: 10 }).map(\n        (_, idx) => (\n          (user = data[idx]),\n          (\n            <il key={idx}>\n              <span>{idx}</span>\n              <Gender idx={idx} />\n              <br />\n            </il>\n          )\n        )\n      )}\n      <il>\n        <button onClick={fetchAgain}>fetch Again</button>\n      </il>\n    </ul>\n  );\n};\n\n\nconst Name = () => {};\n\nconst Location = () => {};\n\nconst Email = () => {};\n\nexport default () => (\n  <>\n  <Hookletons />\n  <Genders />\n  </>\n)\n"]},"metadata":{},"sourceType":"module"}