{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/flx/Dropbox/Projects/hookleton/example/pages/todo.js\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport createHook from '../component';\nvar initial = ['do one', 'do two', 'do tree'];\nvar useStore = createHook(function (initial) {\n  var _useState = useState(initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var add = function add(todo) {\n    return setState(state.concat(todo));\n  };\n\n  var remove = function remove(todo) {\n    return setState(state.filter(function (i) {\n      return i !== todo;\n    }));\n  };\n\n  return [state, {\n    add: add,\n    remove: remove\n  }];\n});\n\nvar TodoForm = function TodoForm() {\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todo = _useState4[0],\n      setTodo = _useState4[1];\n\n  var _useStore = useStore(initial),\n      _useStore2 = _slicedToArray(_useStore, 2),\n      add = _useStore2[1].add;\n\n  var handleTodoChange = function handleTodoChange(e) {\n    return setTodo(e.target.value);\n  };\n\n  var handleTodoAdd = function handleTodoAdd() {\n    add(todo);\n    setTodo('');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    value: todo,\n    onChange: handleTodoChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleTodoAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Add\"));\n};\n\nvar TodoHeader = function TodoHeader() {\n  var _useStore3 = useStore(),\n      _useStore4 = _slicedToArray(_useStore3, 1),\n      todos = _useStore4[0];\n\n  return React.createElement(React.Fragment, null, todos.length === 0 ? React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"All todos are done! \") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Todo List, remain: \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, todos.length), \" todos.\")));\n};\n\nvar TodoList = function TodoList() {\n  var _useStore5 = useStore(),\n      _useStore6 = _slicedToArray(_useStore5, 2),\n      list = _useStore6[0],\n      update = _useStore6[1];\n\n  return null;\n};\n\nexport default (function () {\n  return React.createElement(React.Fragment, null, React.createElement(TodoForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(TodoHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/flx/Dropbox/Projects/hookleton/example/pages/todo.js"],"names":["useState","createHook","initial","useStore","state","setState","add","todo","concat","remove","filter","i","TodoForm","setTodo","handleTodoChange","e","target","value","handleTodoAdd","TodoHeader","todos","length","TodoList","list","update"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,OAAO,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAhB;AAEA,IAAMC,QAAQ,GAAGF,UAAU,CAAC,UAAAC,OAAO,EAAI;AAAA,kBACXF,QAAQ,CAACE,OAAD,CADG;AAAA;AAAA,MAC9BE,KAD8B;AAAA,MACvBC,QADuB;;AAGrC,MAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,IAAI;AAAA,WAAIF,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAaD,IAAb,CAAD,CAAZ;AAAA,GAAhB;;AACA,MAAME,MAAM,GAAG,SAATA,MAAS,CAAAF,IAAI;AAAA,WAAIF,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAa,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKJ,IAAV;AAAA,KAAd,CAAD,CAAZ;AAAA,GAAnB;;AAEA,SAAO,CAACH,KAAD,EAAQ;AAAEE,IAAAA,GAAG,EAAHA,GAAF;AAAOG,IAAAA,MAAM,EAANA;AAAP,GAAR,CAAP;AACD,CAP0B,CAA3B;;AASA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,mBACGZ,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,MACdO,IADc;AAAA,MACRM,OADQ;;AAAA,kBAEDV,QAAQ,CAACD,OAAD,CAFP;AAAA;AAAA,MAEVI,GAFU,iBAEVA,GAFU;;AAIrB,MAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,CAAC;AAAA,WAAIF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAAA,GAA1B;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BZ,IAAAA,GAAG,CAACC,IAAD,CAAH;AACAM,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AAKA,SACE,0CACE;AAAO,IAAA,KAAK,EAAEN,IAAd;AAAoB,IAAA,QAAQ,EAAEO,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEI,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF;AAMD,CAhBD;;AAkBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,mBACPhB,QAAQ,EADD;AAAA;AAAA,MAChBiB,KADgB;;AAGvB,SACE,0CACGA,KAAK,CAACC,MAAN,KAAiB,CAAjB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,CAACC,MAAb,CADrB,YADF,CAJJ,CADF;AAaD,CAhBD;;AAkBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,mBACEnB,QAAQ,EADV;AAAA;AAAA,MACdoB,IADc;AAAA,MACRC,MADQ;;AAErB,SAAO,IAAP;AACD,CAHD;;AAKA,gBAAe;AAAA,SACb,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADa;AAAA,CAAf","sourcesContent":["import { useState } from 'react';\nimport createHook from '../component';\n\nconst initial = ['do one', 'do two', 'do tree'];\n\nconst useStore = createHook(initial => {\n  const [state, setState] = useState(initial);\n\n  const add = todo => setState(state.concat(todo));\n  const remove = todo => setState(state.filter(i => i !== todo));\n\n  return [state, { add, remove }];\n});\n\nconst TodoForm = () => {\n  const [todo, setTodo] = useState('');\n  const [, { add }] = useStore(initial);\n\n  const handleTodoChange = e => setTodo(e.target.value);\n  const handleTodoAdd = () => {\n    add(todo);\n    setTodo('');\n  };\n\n  return (\n    <>\n      <input value={todo} onChange={handleTodoChange} />\n      <button onClick={handleTodoAdd}>Add</button>\n    </>\n  );\n};\n\nconst TodoHeader = () => {\n  const [todos] = useStore();\n\n  return (\n    <>\n      {todos.length === 0 ? (\n        <h4>All todos are done! </h4>\n      ) : (\n        <div>\n          <span>\n            Todo List, remain: <span>{todos.length}</span> todos.\n          </span>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst TodoList = () => {\n  const [list, update] = useStore();\n  return null;\n};\n\nexport default () => (\n  <>\n    <TodoForm />\n    <TodoHeader />\n    <TodoList />\n  </>\n);\n"]},"metadata":{},"sourceType":"module"}