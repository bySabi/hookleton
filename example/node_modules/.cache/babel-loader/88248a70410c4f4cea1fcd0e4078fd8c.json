{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nvar _jsxFileName = \"/Users/flx/Dropbox/Projects/hookleton/example/pages/counters5x5.js\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport createHook from '../component';\nvar stores = new _Map();\n\nfunction createStore(store) {\n  for (var _len = arguments.length, initial = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    initial[_key - 1] = arguments[_key];\n  }\n\n  stores.set(store, createHook.apply(void 0, [useState].concat(initial)));\n}\n\nfunction useStore(store) {\n  var hook = stores.get(store);\n\n  for (var _len2 = arguments.length, initial = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    initial[_key2 - 1] = arguments[_key2];\n  }\n\n  return hook && hook.apply(void 0, initial);\n}\n\nfunction getStore(store) {\n  var hook = stores.get(store);\n  return hook;\n}\n\ncreateStore('1', 0);\ncreateStore('2', 1);\ncreateStore('3', 2);\ncreateStore('4', 3);\ncreateStore('5', 4);\n\nvar Counters = function Counters() {\n  // 'tup' is tuple [count, setCount]\n  var tup1 = useStore('1');\n  var tup2 = useStore('2');\n  var tup3 = useStore('3');\n  var tup4 = useStore('4');\n  var tup5 = useStore('5');\n\n  var increment = function increment(set) {\n    return function (c) {\n      return set(function (c) {\n        return c + 1;\n      });\n    };\n  };\n\n  var decrement = function decrement(set) {\n    return function (c) {\n      return set(function (c) {\n        return c - 1;\n      });\n    };\n  };\n\n  var reset = function reset() {\n    return tup1[1](0), tup2[1](0), tup3[1](0), tup4[1](0), tup5[1](0);\n  };\n\n  return React.createElement(\"ul\", {\n    style: {\n      listStyle: 'none',\n      borderStyle: 'solid'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, [tup1, tup2, tup3, tup4, tup5].map(function (tup, idx) {\n    return React.createElement(\"li\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, tup[0]), React.createElement(\"button\", {\n      onClick: decrement(tup[1]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"button\", {\n      onClick: increment(tup[1]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"reset\")));\n}; // put <Counters /> in a table of 1x5 cells\n\n\nvar TableCounters = function TableCounters() {\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, _Array$from({\n    length: 5\n  }).map(function (_, idx) {\n    return React.createElement(\"td\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Counters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }))));\n}; // This component don't \"use\" the stores, will not rendered on changes,\n// destructured standalone setters will rerender components that \"use\" the stores.\n\n\nvar SetDefaults = function SetDefaults() {\n  var set = function set(store, value) {\n    var _getStore$get = getStore(store).get(),\n        _getStore$get2 = _slicedToArray(_getStore$get, 2),\n        set = _getStore$get2[1];\n\n    set(value);\n  };\n\n  return React.createElement(\"button\", {\n    onClick: function onClick() {\n      return set('1', 0), set('2', 1), set('3', 2), set('4', 3), set('5', 4);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"SET defaults\");\n}; // Repeat `TableCounters` component 5 times\n\n\nexport default (function () {\n  return React.createElement(\"ul\", {\n    style: {\n      listStyle: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(SetDefaults, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), _Array$from({\n    length: 5\n  }).map(function (_, idx) {\n    return React.createElement(\"li\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(TableCounters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }));\n});","map":{"version":3,"sources":["/Users/flx/Dropbox/Projects/hookleton/example/pages/counters5x5.js"],"names":["useState","createHook","stores","createStore","store","initial","set","useStore","hook","get","getStore","Counters","tup1","tup2","tup3","tup4","tup5","increment","c","decrement","reset","listStyle","borderStyle","map","tup","idx","TableCounters","length","_","SetDefaults","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport createHook from '../component';\n\nconst stores = new Map();\n\nfunction createStore(store, ...initial) {\n  stores.set(store, createHook(useState, ...initial));\n}\n\nfunction useStore(store, ...initial) {\n  const hook = stores.get(store);\n  return hook && hook(...initial);\n}\n\nfunction getStore(store) {\n  const hook = stores.get(store);\n  return hook;\n}\n\ncreateStore('1', 0);\ncreateStore('2', 1);\ncreateStore('3', 2);\ncreateStore('4', 3);\ncreateStore('5', 4);\n\nconst Counters = () => {\n  // 'tup' is tuple [count, setCount]\n  const tup1 = useStore('1');\n  const tup2 = useStore('2');\n  const tup3 = useStore('3');\n  const tup4 = useStore('4');\n  const tup5 = useStore('5');\n\n  const increment = set => c => set(c => c + 1);\n  const decrement = set => c => set(c => c - 1);\n  const reset = () => (tup1[1](0), tup2[1](0), tup3[1](0), tup4[1](0), tup5[1](0));\n\n  return (\n    <ul style={{ listStyle: 'none', borderStyle: 'solid' }}>\n      {[tup1, tup2, tup3, tup4, tup5].map((tup, idx) => (\n        <li key={idx}>\n          <span>{tup[0]}</span>\n          <button onClick={decrement(tup[1])}>-</button>\n          <button onClick={increment(tup[1])}>+</button>\n          <br />\n        </li>\n      ))}\n      <li>\n        <button onClick={reset}>reset</button>\n      </li>\n    </ul>\n  );\n};\n\n// put <Counters /> in a table of 1x5 cells\nconst TableCounters = () => (\n  <table>\n    <tbody>\n      <tr>\n        {Array.from({ length: 5 }).map((_, idx) => (\n          <td key={idx}>\n            <Counters />\n          </td>\n        ))}\n      </tr>\n    </tbody>\n  </table>\n);\n\n// This component don't \"use\" the stores, will not rendered on changes,\n// destructured standalone setters will rerender components that \"use\" the stores.\nconst SetDefaults = () => {\n  const set = (store, value) => {\n    const [, set] = getStore(store).get();\n    set(value);\n  };\n\n  return (\n    <button onClick={() => (set('1', 0), set('2', 1), set('3', 2), set('4', 3), set('5', 4))}>\n      SET defaults\n    </button>\n  );\n};\n\n// Repeat `TableCounters` component 5 times\nexport default () => (\n  <ul style={{ listStyle: 'none' }}>\n    <li>\n      <SetDefaults />\n    </li>\n    {Array.from({ length: 5 }).map((_, idx) => (\n      <li key={idx}>\n        <TableCounters />\n      </li>\n    ))}\n  </ul>\n);\n"]},"metadata":{},"sourceType":"module"}