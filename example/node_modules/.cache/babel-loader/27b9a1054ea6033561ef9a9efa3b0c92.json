{"ast":null,"code":"\"use strict\";\n/* global __NEXT_DATA__ */\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\n\nvar _set = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/set\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/createClass\"));\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar url_1 = require(\"url\");\n\nvar mitt_1 = __importDefault(require(\"../mitt\"));\n\nvar shallow_equals_1 = __importDefault(require(\"./shallow-equals\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar Router =\n/*#__PURE__*/\nfunction () {\n  function Router(pathname, query, as) {\n    var _this = this;\n\n    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n        initialProps = _ref.initialProps,\n        pageLoader = _ref.pageLoader,\n        App = _ref.App,\n        Component = _ref.Component,\n        err = _ref.err;\n\n    (0, _classCallCheck2.default)(this, Router);\n\n    this.onPopState = function (e) {\n      if (!e.state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname = _this.pathname,\n            _query = _this.query;\n\n        _this.changeState('replaceState', utils_1.formatWithValidation({\n          pathname: _pathname,\n          query: _query\n        }), utils_1.getURL());\n\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (!_this._beforePopState(e.state)) {\n        return;\n      }\n\n      var _e$state = e.state,\n          url = _e$state.url,\n          as = _e$state.as,\n          options = _e$state.options;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof url === 'undefined' || typeof as === 'undefined') {\n          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n        }\n      }\n\n      _this.replace(url, as, options);\n    }; // represents the current component key\n\n\n    this.route = toRoute(pathname); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        props: initialProps,\n        err: err\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = pathname;\n    this.query = query;\n    this.asPath = as;\n    this.subscriptions = new _set.default();\n    this.componentLoadCancel = null;\n\n    this._beforePopState = function () {\n      return true;\n    };\n\n    if (typeof window !== 'undefined') {\n      // in order for `e.state` to work on the `onpopstate` event\n      // we have to register the initial route upon initialization\n      this.changeState('replaceState', utils_1.formatWithValidation({\n        pathname: pathname,\n        query: query\n      }), as);\n      window.addEventListener('popstate', this.onPopState);\n    }\n  }\n\n  (0, _createClass2.default)(Router, [{\n    key: \"update\",\n    value: function update(route, Component) {\n      var data = this.components[route];\n\n      if (!data) {\n        throw new Error(\"Cannot update unavailable route: \".concat(route));\n      }\n\n      var newData = (0, _assign.default)({}, data, {\n        Component: Component\n      });\n      this.components[route] = newData; // pages/_app.js updated\n\n      if (route === '/_app') {\n        this.notify(this.components[this.route]);\n        return;\n      }\n\n      if (route === this.route) {\n        this.notify(newData);\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function () {\n      var _reload = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(route) {\n        var pathname, query, url, as, routeInfo, error;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                delete this.components[route];\n                this.pageLoader.clearCache(route);\n\n                if (!(route !== this.route)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                pathname = this.pathname, query = this.query;\n                url = window.location.href; // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.\n\n                as = window.location.pathname + window.location.search + window.location.hash;\n                Router.events.emit('routeChangeStart', url);\n                _context.next = 10;\n                return this.getRouteInfo(route, pathname, query, as);\n\n              case 10:\n                routeInfo = _context.sent;\n                error = routeInfo.error;\n\n                if (!(error && error.cancelled)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 14:\n                this.notify(routeInfo);\n\n                if (!error) {\n                  _context.next = 18;\n                  break;\n                }\n\n                Router.events.emit('routeChangeError', error, url);\n                throw error;\n\n              case 18:\n                Router.events.emit('routeChangeComplete', url);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function reload(_x) {\n        return _reload.apply(this, arguments);\n      }\n\n      return reload;\n    }()\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('pushState', url, as, options);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function () {\n      var _change = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2(method, _url, _as, options) {\n        var url, as, _url_1$parse, pathname, query, route, _options$shallow, shallow, routeInfo, _routeInfo, error, hash;\n\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // If url and as provided as an object representation,\n                // we'll format them into the string version here.\n                url = (0, _typeof2.default)(_url) === 'object' ? utils_1.formatWithValidation(_url) : _url;\n                as = (0, _typeof2.default)(_as) === 'object' ? utils_1.formatWithValidation(_as) : _as; // Add the ending slash to the paths. So, we can serve the\n                // \"<page>/index.html\" directly for the SSR page.\n\n                if (__NEXT_DATA__.nextExport) {\n                  as = Router._rewriteUrlForNextExport(as);\n                }\n\n                this.abortComponentLoad(as); // If the url change is only related to a hash change\n                // We should not proceed. We should only change the state.\n\n                if (!this.onlyAHashChange(as)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, as);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return _context2.abrupt(\"return\", true);\n\n              case 10:\n                _url_1$parse = url_1.parse(url, true), pathname = _url_1$parse.pathname, query = _url_1$parse.query; // If asked to change the current URL we should reload the current page\n                // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n                // We also need to set the method = replaceState always\n                // as this should not go into the history (That's how browsers work)\n                // We should compare the new asPath to the current asPath, not the url\n\n                if (!this.urlIsNew(as)) {\n                  method = 'replaceState';\n                }\n\n                route = toRoute(pathname);\n                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow;\n                routeInfo = null;\n                Router.events.emit('routeChangeStart', as); // If shallow === false and other conditions met, we reuse the\n                // existing routeInfo for this route.\n                // Because of this, getInitialProps would not run.\n\n                if (!(shallow && this.isShallowRoutingPossible(route))) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                routeInfo = this.components[route];\n                _context2.next = 23;\n                break;\n\n              case 20:\n                _context2.next = 22;\n                return this.getRouteInfo(route, pathname, query, as);\n\n              case 22:\n                routeInfo = _context2.sent;\n\n              case 23:\n                _routeInfo = routeInfo, error = _routeInfo.error;\n\n                if (!(error && error.cancelled)) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 26:\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, as, options);\n                hash = window.location.hash.substring(1);\n                this.set(route, pathname, query, as, (0, _assign.default)({}, routeInfo, {\n                  hash: hash\n                }));\n\n                if (!error) {\n                  _context2.next = 33;\n                  break;\n                }\n\n                Router.events.emit('routeChangeError', error, as);\n                throw error;\n\n              case 33:\n                Router.events.emit('routeChangeComplete', as);\n                return _context2.abrupt(\"return\", true);\n\n              case 35:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function change(_x2, _x3, _x4, _x5) {\n        return _change.apply(this, arguments);\n      }\n\n      return change;\n    }()\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n\n      if (method !== 'pushState' || utils_1.getURL() !== as) {\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options\n        }, null, as);\n      }\n    }\n  }, {\n    key: \"getRouteInfo\",\n    value: function () {\n      var _getRouteInfo = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee3(route, pathname, query, as) {\n        var routeInfo, _routeInfo2, Component, _require, isValidElementType, ctx, _Component, _ctx;\n\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                routeInfo = null;\n                _context3.prev = 1;\n                routeInfo = this.components[route];\n\n                if (routeInfo) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _context3.next = 6;\n                return this.fetchComponent(route, as);\n\n              case 6:\n                _context3.t0 = _context3.sent;\n                routeInfo = {\n                  Component: _context3.t0\n                };\n\n              case 8:\n                _routeInfo2 = routeInfo, Component = _routeInfo2.Component;\n\n                if (!(process.env.NODE_ENV !== 'production')) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                _require = require('react-is'), isValidElementType = _require.isValidElementType;\n\n                if (isValidElementType(Component)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n\n              case 13:\n                ctx = {\n                  pathname: pathname,\n                  query: query,\n                  asPath: as\n                };\n                _context3.next = 16;\n                return this.getInitialProps(Component, ctx);\n\n              case 16:\n                routeInfo.props = _context3.sent;\n                this.components[route] = routeInfo;\n                _context3.next = 44;\n                break;\n\n              case 20:\n                _context3.prev = 20;\n                _context3.t1 = _context3[\"catch\"](1);\n\n                if (!(_context3.t1.code === 'PAGE_LOAD_ERROR')) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n                window.location.href = as; // Changing the URL doesn't block executing the current code path.\n                // So, we need to mark it as a cancelled error and stop the routing logic.\n\n                _context3.t1.cancelled = true;\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t1\n                });\n\n              case 26:\n                if (!_context3.t1.cancelled) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t1\n                });\n\n              case 28:\n                _context3.next = 30;\n                return this.fetchComponent('/_error');\n\n              case 30:\n                _Component = _context3.sent;\n                routeInfo = {\n                  Component: _Component,\n                  err: _context3.t1\n                };\n                _ctx = {\n                  err: _context3.t1,\n                  pathname: pathname,\n                  query: query\n                };\n                _context3.prev = 33;\n                _context3.next = 36;\n                return this.getInitialProps(_Component, _ctx);\n\n              case 36:\n                routeInfo.props = _context3.sent;\n                _context3.next = 43;\n                break;\n\n              case 39:\n                _context3.prev = 39;\n                _context3.t2 = _context3[\"catch\"](33);\n                console.error('Error in error page `getInitialProps`: ', _context3.t2);\n                routeInfo.props = {};\n\n              case 43:\n                routeInfo.error = _context3.t1;\n\n              case 44:\n                return _context3.abrupt(\"return\", routeInfo);\n\n              case 45:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 20], [33, 39]]);\n      }));\n\n      function getRouteInfo(_x6, _x7, _x8, _x9) {\n        return _getRouteInfo.apply(this, arguments);\n      }\n\n      return getRouteInfo;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      this.notify(data);\n    }\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._beforePopState = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n\n      var _this$asPath$split = this.asPath.split('#'),\n          _this$asPath$split2 = (0, _slicedToArray2.default)(_this$asPath$split, 2),\n          oldUrlNoHash = _this$asPath$split2[0],\n          oldHash = _this$asPath$split2[1];\n\n      var _as$split = as.split('#'),\n          _as$split2 = (0, _slicedToArray2.default)(_as$split, 2),\n          newUrlNoHash = _as$split2[0],\n          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n\n\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n\n\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n\n\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n          _as$split4 = (0, _slicedToArray2.default)(_as$split3, 2),\n          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value\n\n\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n\n\n      var idEl = document.getElementById(hash);\n\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n\n\n      var nameEl = document.getElementsByName(hash)[0];\n\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      var _url_1$parse2 = url_1.parse(asPath, true),\n          pathname = _url_1$parse2.pathname,\n          query = _url_1$parse2.query;\n\n      var _url_1$parse3 = url_1.parse(this.asPath, true),\n          curPathname = _url_1$parse3.pathname;\n\n      return curPathname !== pathname || !shallow_equals_1.default(query, this.query);\n    }\n  }, {\n    key: \"isShallowRoutingPossible\",\n    value: function isShallowRoutingPossible(route) {\n      return (// If there's cached routeInfo for the route.\n        Boolean(this.components[route]) && // If the route is already rendered on the screen.\n        this.route === route\n      );\n    }\n  }, {\n    key: \"prefetch\",\n    value: function () {\n      var _prefetch = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee4(url) {\n        var _url_1$parse4, pathname, route;\n\n        return _regenerator.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(process.env.NODE_ENV === 'development')) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _url_1$parse4 = url_1.parse(url), pathname = _url_1$parse4.pathname;\n                route = toRoute(pathname);\n                return _context4.abrupt(\"return\", this.pageLoader.prefetch(route));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function prefetch(_x10) {\n        return _prefetch.apply(this, arguments);\n      }\n\n      return prefetch;\n    }()\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee5(route, as) {\n        var cancelled, cancel, Component, error;\n        return _regenerator.default.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                cancelled = false;\n\n                cancel = this.componentLoadCancel = function () {\n                  cancelled = true;\n                };\n\n                _context5.next = 4;\n                return this.fetchRoute(route);\n\n              case 4:\n                Component = _context5.sent;\n\n                if (!cancelled) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n                error.cancelled = true;\n                throw error;\n\n              case 9:\n                if (cancel === this.componentLoadCancel) {\n                  this.componentLoadCancel = null;\n                }\n\n                return _context5.abrupt(\"return\", Component);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fetchComponent(_x11, _x12) {\n        return _fetchComponent.apply(this, arguments);\n      }\n\n      return fetchComponent;\n    }()\n  }, {\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee6(Component, ctx) {\n        var cancelled, cancel, App, props, err;\n        return _regenerator.default.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                cancelled = false;\n\n                cancel = function cancel() {\n                  cancelled = true;\n                };\n\n                this.componentLoadCancel = cancel;\n                App = this.components['/_app'].Component;\n                _context6.next = 6;\n                return utils_1.loadGetInitialProps(App, {\n                  Component: Component,\n                  router: this,\n                  ctx: ctx\n                });\n\n              case 6:\n                props = _context6.sent;\n\n                if (cancel === this.componentLoadCancel) {\n                  this.componentLoadCancel = null;\n                }\n\n                if (!cancelled) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                err = new Error('Loading initial props cancelled');\n                err.cancelled = true;\n                throw err;\n\n              case 12:\n                return _context6.abrupt(\"return\", props);\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getInitialProps(_x13, _x14) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }, {\n    key: \"fetchRoute\",\n    value: function () {\n      var _fetchRoute = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee7(route) {\n        return _regenerator.default.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this.pageLoader.loadPage(route));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function fetchRoute(_x15) {\n        return _fetchRoute.apply(this, arguments);\n      }\n\n      return fetchRoute;\n    }()\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.componentLoadCancel) {\n        Router.events.emit('routeChangeError', new Error('Route Cancelled'), as);\n        this.componentLoadCancel();\n        this.componentLoadCancel = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      var App = this.components['/_app'].Component;\n      this.subscriptions.forEach(function (fn) {\n        return fn((0, _assign.default)({}, data, {\n          App: App\n        }));\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(fn) {\n      var _this2 = this;\n\n      this.subscriptions.add(fn);\n      return function () {\n        return _this2.subscriptions.delete(fn);\n      };\n    }\n  }], [{\n    key: \"_rewriteUrlForNextExport\",\n    value: function _rewriteUrlForNextExport(url) {\n      var _url$split = url.split('#'),\n          _url$split2 = (0, _slicedToArray2.default)(_url$split, 2),\n          hash = _url$split2[1];\n\n      url = url.replace(/#.*/, '');\n\n      var _url$split3 = url.split('?'),\n          _url$split4 = (0, _slicedToArray2.default)(_url$split3, 2),\n          path = _url$split4[0],\n          qs = _url$split4[1];\n\n      path = path.replace(/\\/$/, '');\n      var newPath = path; // Append a trailing slash if this path does not have an extension\n\n      if (!/\\.[^/]+\\/?$/.test(path)) {\n        newPath = \"\".concat(path, \"/\");\n      }\n\n      if (qs) {\n        newPath = \"\".concat(newPath, \"?\").concat(qs);\n      }\n\n      if (hash) {\n        newPath = \"\".concat(newPath, \"#\").concat(hash);\n      }\n\n      return newPath;\n    }\n  }]);\n  return Router;\n}();\n\nRouter.events = mitt_1.default();\nexports.default = Router;\n\nfunction toRoute(path) {\n  return path.replace(/\\/$/, '') || '/';\n}","map":{"version":3,"sources":["/Users/flx/Dropbox/Projects/hookleton/example/node_modules/next-server/dist/lib/router/router.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","url_1","require","mitt_1","shallow_equals_1","utils_1","Router","pathname","query","as","initialProps","pageLoader","App","Component","err","onPopState","e","state","changeState","formatWithValidation","getURL","_beforePopState","url","options","process","env","NODE_ENV","console","warn","replace","route","toRoute","components","props","events","asPath","subscriptions","componentLoadCancel","window","addEventListener","data","Error","newData","notify","clearCache","location","href","search","hash","emit","getRouteInfo","routeInfo","error","cancelled","history","back","change","method","_url","_as","__NEXT_DATA__","nextExport","_rewriteUrlForNextExport","abortComponentLoad","onlyAHashChange","scrollToHash","parse","urlIsNew","shallow","isShallowRoutingPossible","substring","set","fetchComponent","isValidElementType","ctx","getInitialProps","code","cb","split","oldUrlNoHash","oldHash","newUrlNoHash","newHash","scrollTo","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","curPathname","default","Boolean","prefetch","cancel","fetchRoute","loadGetInitialProps","router","loadPage","forEach","fn","add","delete","path","qs","newPath","test"],"mappings":"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","sourcesContent":["\"use strict\";\n/* global __NEXT_DATA__ */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst shallow_equals_1 = __importDefault(require(\"./shallow-equals\"));\nconst utils_1 = require(\"../utils\");\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, Component, err } = {}) {\n        this.onPopState = e => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (!this._beforePopState(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = { Component, props: initialProps, err };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.subscriptions = new Set();\n        this.componentLoadCancel = null;\n        this._beforePopState = () => true;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n        }\n    }\n    static _rewriteUrlForNextExport(url) {\n        const [, hash] = url.split('#');\n        url = url.replace(/#.*/, '');\n        let [path, qs] = url.split('?');\n        path = path.replace(/\\/$/, '');\n        let newPath = path;\n        // Append a trailing slash if this path does not have an extension\n        if (!/\\.[^/]+\\/?$/.test(path)) {\n            newPath = `${path}/`;\n        }\n        if (qs) {\n            newPath = `${newPath}?${qs}`;\n        }\n        if (hash) {\n            newPath = `${newPath}#${hash}`;\n        }\n        return newPath;\n    }\n    update(route, Component) {\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign({}, data, { Component });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    async reload(route) {\n        delete this.components[route];\n        this.pageLoader.clearCache(route);\n        if (route !== this.route)\n            return;\n        const { pathname, query } = this;\n        const url = window.location.href;\n        // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.\n        const as = window.location.pathname + window.location.search + window.location.hash;\n        Router.events.emit('routeChangeStart', url);\n        const routeInfo = await this.getRouteInfo(route, pathname, query, as);\n        const { error } = routeInfo;\n        if (error && error.cancelled) {\n            return;\n        }\n        this.notify(routeInfo);\n        if (error) {\n            Router.events.emit('routeChangeError', error, url);\n            throw error;\n        }\n        Router.events.emit('routeChangeComplete', url);\n    }\n    back() {\n        window.history.back();\n    }\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    async change(method, _url, _as, options) {\n        // If url and as provided as an object representation,\n        // we'll format them into the string version here.\n        const url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n        let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n        // Add the ending slash to the paths. So, we can serve the\n        // \"<page>/index.html\" directly for the SSR page.\n        if (__NEXT_DATA__.nextExport) {\n            as = Router._rewriteUrlForNextExport(as);\n        }\n        this.abortComponentLoad(as);\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        if (this.onlyAHashChange(as)) {\n            Router.events.emit('hashChangeStart', as);\n            this.changeState(method, url, as);\n            this.scrollToHash(as);\n            Router.events.emit('hashChangeComplete', as);\n            return true;\n        }\n        const { pathname, query } = url_1.parse(url, true);\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!this.urlIsNew(as)) {\n            method = 'replaceState';\n        }\n        const route = toRoute(pathname);\n        const { shallow = false } = options;\n        let routeInfo = null;\n        Router.events.emit('routeChangeStart', as);\n        // If shallow === false and other conditions met, we reuse the\n        // existing routeInfo for this route.\n        // Because of this, getInitialProps would not run.\n        if (shallow && this.isShallowRoutingPossible(route)) {\n            routeInfo = this.components[route];\n        }\n        else {\n            routeInfo = await this.getRouteInfo(route, pathname, query, as);\n        }\n        const { error } = routeInfo;\n        if (error && error.cancelled) {\n            return false;\n        }\n        Router.events.emit('beforeHistoryChange', as);\n        this.changeState(method, url, as, options);\n        const hash = window.location.hash.substring(1);\n        this.set(route, pathname, query, as, Object.assign({}, routeInfo, { hash }));\n        if (error) {\n            Router.events.emit('routeChangeError', error, as);\n            throw error;\n        }\n        Router.events.emit('routeChangeComplete', as);\n        return true;\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            window.history[method]({ url, as, options }, null, as);\n        }\n    }\n    async getRouteInfo(route, pathname, query, as) {\n        let routeInfo = null;\n        try {\n            routeInfo = this.components[route];\n            if (!routeInfo) {\n                routeInfo = { Component: await this.fetchComponent(route, as) };\n            }\n            const { Component } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            const ctx = { pathname, query, asPath: as };\n            routeInfo.props = await this.getInitialProps(Component, ctx);\n            this.components[route] = routeInfo;\n        }\n        catch (err) {\n            if (err.code === 'PAGE_LOAD_ERROR') {\n                // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n                window.location.href = as;\n                // Changing the URL doesn't block executing the current code path.\n                // So, we need to mark it as a cancelled error and stop the routing logic.\n                err.cancelled = true;\n                return { error: err };\n            }\n            if (err.cancelled) {\n                return { error: err };\n            }\n            const Component = await this.fetchComponent('/_error');\n            routeInfo = { Component, err };\n            const ctx = { err, pathname, query };\n            try {\n                routeInfo.props = await this.getInitialProps(Component, ctx);\n            }\n            catch (err) {\n                console.error('Error in error page `getInitialProps`: ', err);\n                routeInfo.props = {};\n            }\n            routeInfo.error = err;\n        }\n        return routeInfo;\n    }\n    set(route, pathname, query, as, data) {\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    beforePopState(cb) {\n        this._beforePopState = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && (oldUrlNoHash === newUrlNoHash) && (oldHash === newHash)) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        const { pathname, query } = url_1.parse(asPath, true);\n        const { pathname: curPathname } = url_1.parse(this.asPath, true);\n        return curPathname !== pathname || !shallow_equals_1.default(query, this.query);\n    }\n    isShallowRoutingPossible(route) {\n        return (\n        // If there's cached routeInfo for the route.\n        Boolean(this.components[route]) &&\n            // If the route is already rendered on the screen.\n            this.route === route);\n    }\n    async prefetch(url) {\n        // We don't add support for prefetch in the development mode.\n        // If we do that, our on-demand-entries optimization won't performs better\n        if (process.env.NODE_ENV === 'development')\n            return;\n        const { pathname } = url_1.parse(url);\n        const route = toRoute(pathname);\n        return this.pageLoader.prefetch(route);\n    }\n    async fetchComponent(route, as) {\n        let cancelled = false;\n        const cancel = this.componentLoadCancel = function () {\n            cancelled = true;\n        };\n        const Component = await this.fetchRoute(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.componentLoadCancel) {\n            this.componentLoadCancel = null;\n        }\n        return Component;\n    }\n    async getInitialProps(Component, ctx) {\n        let cancelled = false;\n        const cancel = () => { cancelled = true; };\n        this.componentLoadCancel = cancel;\n        const { Component: App } = this.components['/_app'];\n        const props = await utils_1.loadGetInitialProps(App, { Component, router: this, ctx });\n        if (cancel === this.componentLoadCancel) {\n            this.componentLoadCancel = null;\n        }\n        if (cancelled) {\n            const err = new Error('Loading initial props cancelled');\n            err.cancelled = true;\n            throw err;\n        }\n        return props;\n    }\n    async fetchRoute(route) {\n        return this.pageLoader.loadPage(route);\n    }\n    abortComponentLoad(as) {\n        if (this.componentLoadCancel) {\n            Router.events.emit('routeChangeError', new Error('Route Cancelled'), as);\n            this.componentLoadCancel();\n            this.componentLoadCancel = null;\n        }\n    }\n    notify(data) {\n        const { Component: App } = this.components['/_app'];\n        this.subscriptions.forEach((fn) => fn(Object.assign({}, data, { App })));\n    }\n    subscribe(fn) {\n        this.subscriptions.add(fn);\n        return () => this.subscriptions.delete(fn);\n    }\n}\nRouter.events = mitt_1.default();\nexports.default = Router;\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\n"]},"metadata":{},"sourceType":"script"}