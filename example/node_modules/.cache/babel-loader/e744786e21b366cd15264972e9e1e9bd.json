{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/flx/Dropbox/Projects/hookleton/example/pages/index.js\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport createHook from '../component';\nimport createPredicateHook from '../component/predicateHookleton';\n\nvar useMi = function useMi() {\n  var tuple = useState(0); //return tuple.concat(Math.random());\n\n  return tuple.concat(10);\n};\n\nvar useAccelerator = createHook(useMi, 0);\nvar useAccelerator2 = createPredicateHook(useMi, 0); //console.log(useAccelerator.get());\n\nvar Logo = function Logo(_ref) {\n  var a = _ref.a,\n      color = _ref.color;\n\n  //const [acc, setAcc] = useAccelerator(s => s > 5);\n  var _useAccelerator = useAccelerator(),\n      _useAccelerator2 = _slicedToArray(_useAccelerator, 2),\n      acc = _useAccelerator2[0],\n      setAcc = _useAccelerator2[1]; //useAccelerator2.updater(s => (s < 8 ? s + 1 : s));\n\n\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Logo \", acc), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setAcc(function (s) {\n        return s + 1;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setAcc(function (s) {\n        return s;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"nothing\"));\n};\n\nvar Single = function Single() {\n  useAccelerator2();\n  return null;\n};\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nvar Logo2 = function Logo2(_ref2) {\n  var a = _ref2.a,\n      color = _ref2.color;\n\n  //const [acc, setAcc] = useAccelerator(s => s > 5);\n\n  /*\n  const random = () => {\n    const num = getRandomArbitrary(-1, 1);\n    console.log(num);\n    console.log(acc);\n    return acc > acc * num;\n  };\n  console.log(random());\n  */\n  var _useAccelerator3 = useAccelerator2([]),\n      _useAccelerator4 = _slicedToArray(_useAccelerator3, 4),\n      acc = _useAccelerator4[0],\n      setAcc = _useAccelerator4[1],\n      setPredicate = _useAccelerator4[3].setPredicate;\n\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Logo2 \", acc), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setAcc(function (s) {\n        return s + 1;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setPredicate(function (s) {\n        return s < 5;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"set\"));\n};\n\nexport default (function () {\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Single, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, _Array$from({\n    length: 4\n  }).map(function (_, i) {\n    return React.createElement(\"td\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Logo2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })))));\n});","map":{"version":3,"sources":["/Users/flx/Dropbox/Projects/hookleton/example/pages/index.js"],"names":["useState","useEffect","createHook","createPredicateHook","useMi","tuple","concat","useAccelerator","useAccelerator2","Logo","a","color","acc","setAcc","s","Single","getRandomArbitrary","min","max","Math","random","Logo2","setPredicate","length","map","_","i"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport createHook from '../component';\nimport createPredicateHook from '../component/predicateHookleton';\n\nconst useMi = () => {\n  const tuple = useState(0);\n  //return tuple.concat(Math.random());\n  return tuple.concat(10);\n};\n\nconst useAccelerator = createHook(useMi, 0);\nconst useAccelerator2 = createPredicateHook(useMi, 0);\n\n//console.log(useAccelerator.get());\n\nconst Logo = ({ a, color }) => {\n  //const [acc, setAcc] = useAccelerator(s => s > 5);\n  const [acc, setAcc] = useAccelerator();\n  //useAccelerator2.updater(s => (s < 8 ? s + 1 : s));\n\n  return (\n    <>\n      <p>Logo {acc}</p>\n      <button onClick={() => setAcc(s => s + 1)}>+</button>\n      <button onClick={() => setAcc(s => s)}>nothing</button>\n    </>\n  );\n};\n\nconst Single = () => {\n  useAccelerator2();\n  return null;\n};\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nconst Logo2 = ({ a, color }) => {\n  //const [acc, setAcc] = useAccelerator(s => s > 5);\n  /*\n  const random = () => {\n    const num = getRandomArbitrary(-1, 1);\n    console.log(num);\n    console.log(acc);\n    return acc > acc * num;\n  };\n  console.log(random());\n*/\n  const [acc, setAcc,, { setPredicate }] = useAccelerator2([]);\n\n  return (\n    <>\n      <p>Logo2 {acc}</p>\n      <button onClick={() => setAcc(s => s + 1)}>+</button>\n      <button onClick={() => setPredicate(s => s < 5)}>set</button>\n    </>\n  );\n};\n\nexport default () => (\n  <table>\n    <Single />\n    <tbody>\n      <tr>\n        {Array.from({ length: 4 }).map((_, i) => (\n          <td key={i}>\n            <Logo />\n          </td>\n        ))}\n        <td>\n          <Logo2 />\n        </td>\n      </tr>\n    </tbody>\n  </table>\n);\n"]},"metadata":{},"sourceType":"module"}